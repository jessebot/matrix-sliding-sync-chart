apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matrix-sliding-sync.fullname" . }}
  labels:
    {{- include "matrix-sliding-sync.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "matrix-sliding-sync.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "matrix-sliding-sync.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "matrix-sliding-sync.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.postgresql.enabled }}
        - name: postgresql-isready
          image: {{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "matrix-sliding-sync.postgresql.secretName" . }}
                  key: {{ .Values.postgresql.global.postgresql.auth.secretKeys.databaseUsername }}
            - name: DATABASE_HOSTNAME
              {{- if not .Values.postgresql.global.postgresql.auth.existingSecret }}
              value: {{ template "postgresql.v1.primary.fullname" .Subcharts.postgresql }}
              {{ else }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "matrix-sliding-sync.postgresql.secretName" . }}
                  key: {{ .Values.postgresql.global.postgresql.auth.secretKeys.databaseHostname }}
              {{- end }}
            {{- if .Values.postgresql.sslmode }}
            - name: PGSSLMODE
              value: {{ .Values.postgresql.sslmode }}
            - name: PGSSLCERT
              value: {{ .Values.postgresql.sslcert }}
            - name: PGSSLKEY
              value: {{ .Values.postgresql.sslkey }}
            - name: PGSSLROOTCERT
              value: {{ .Values.postgresql.sslrootcert }}
            {{- end }}
          command:
            - "sh"
            - "-c"
            - "until pg_isready -h $DATABASE_HOSTNAME -U $POSTGRES_USER; do sleep 2; done"
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - secretRef:
          {{- if .Values.syncv3.existingSecret }}
                name: {{ .Values.syncv3.existingSecret }}
          {{- else }}
                name: {{ include "matrix-sliding-sync.fullname" . }}-env
          {{- end }}

      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
